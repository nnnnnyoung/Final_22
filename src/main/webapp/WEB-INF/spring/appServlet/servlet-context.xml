<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	<!-- 확인용  -->
	<annotation-driven>
		<message-converters>
			<beans:bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<beans:property name="supportedMediaTypes" value="text/html; charset=UTF-8"/>				
			</beans:bean>
		</message-converters>
	</annotation-driven>

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	<beans:bean class="org.springframework.web.multipart.commons.CommonsMultipartResolver" id="multipartResolver">
      <beans:property name="maxUploadSize" value="10485760"></beans:property> <!-- 첨부파일용량제어 ~ 10메가 제한 설정 -->
   </beans:bean>
   <!-- 서버에 올라온 임시공간에 첨부파일의 위치를 선언함   String uploadPath="/tmp" 랑 같은 의미
       자바코드에서 선언해도 되는데 스프링은 컨테이너에서 객체를 가져온다. 즉, 스프링에서 객체는 컨테이너에 있다는 것이 일반적인 생각
       그래서 전체 코드에서 알고 있어야 하는 설정은 여기서 하는 것이 좋다.
    -->
   <beans:bean class="java.lang.String" id="uploadPath">
      <beans:constructor-arg value="/tmp"></beans:constructor-arg> <!-- 운용되는 서버 -->
      <!-- <beans:constructor-arg value="c:\\tmp"></beans:constructor-arg> 로컬드라이버 -->
   </beans:bean>
	
	
	<beans:bean id="Interceptor"
		class="com.groupone.interceptor.Interceptor"></beans:bean>
	<!-- 객체를 만들어 주세요.. 라는 설정입니다.. 이코드가 인터셉터 기능은 아닙니다.. -->
	<!-- 인터셉터 설정 인터셉터에  적용될 컨트롤러를 매핑으로 설정 -->
	<interceptors>
		<interceptor>
			<mapping path="/**"/><!-- /는 모든것../a/b/c -->
			<!-- 인터셉터는 로그인과 관련된 컨트롤러 요청은 처리하면 안된다.. 제외시킨다. -->
			<exclude-mapping path="/"/>	<!-- 이것은 제외하고 매핑하라 홈화면에 인터셉터가 안걸리게해줌 -->
			<exclude-mapping path="/idchk"/>
			<exclude-mapping path="/login**"/>
			<exclude-mapping path="/logout**"/>
			<exclude-mapping path="/resources/**"/>
			<exclude-mapping path="/memberinsert"/>
			<exclude-mapping path="/memberjoinview"/>
			<beans:ref bean="Interceptor"/>
		</interceptor>
	</interceptors>
	<context:component-scan base-package="com.groupone.controller"/>
	<context:component-scan base-package="com.groupone.vo"/>
	<context:component-scan base-package="com.groupone.dao"/>
	<context:component-scan base-package="com.groupone.service"/>
	<context:component-scan base-package="com.groupone.util"/> <!-- filedatautil 컨트롤러 지정했으니 해야지  -->
	<annotation-driven>
      <message-converters>
         <beans:bean class="org.springframework.http.converter.StringHttpMessageConverter">
            <beans:property name="supportedMediaTypes" value="text/html; charset=UTF-8"/>            
         </beans:bean>
      </message-converters>
   </annotation-driven>
	
	
</beans:beans>
